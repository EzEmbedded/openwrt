--- a/drivers/usb/serial/option.c	2021-02-02 17:14:32.000000000 +0800
+++ b/drivers/usb/serial/option.c	2021-02-01 14:56:55.000000000 +0800
@@ -237,6 +237,7 @@ static void option_instat_callback(struct urb *urb);

#define QUALCOMM_VENDOR_ID			0x05C6
/* These Quectel products use Qualcomm's vendor ID */
#define QUECTEL_PRODUCT_EC20			0x9215
#define QUECTEL_PRODUCT_UC20			0x9003
#define QUECTEL_PRODUCT_UC15			0x9090
/* These u-blox products use Qualcomm's vendor ID */
@ -1093,6 +1094,7 @@ static const struct usb_device_id option_ids[] = {
	{ USB_DEVICE(QUALCOMM_VENDOR_ID, 0x9000), /* SIMCom SIM5218 */
	  .driver_info = NCTRL(0) | NCTRL(1) | NCTRL(2) | NCTRL(3) | RSVD(4) },
	/* Quectel products using Qualcomm vendor ID */
	{ USB_DEVICE(QUALCOMM_VENDOR_ID, QUECTEL_PRODUCT_EC20)},
	{ USB_DEVICE(QUALCOMM_VENDOR_ID, QUECTEL_PRODUCT_UC15)},
	{ USB_DEVICE(QUALCOMM_VENDOR_ID, QUECTEL_PRODUCT_UC20),
	  .driver_info = RSVD(4) },
@ -2100,6 +2102,9 @@ static struct usb_serial_driver option_1port_device = {
#ifdef CONFIG_PM
	.suspend           = usb_wwan_suspend,
	.resume            = usb_wwan_resume,
#if 1 //Added by Quectel
    .reset_resume = usb_wwan_resume,
#endif	
#endif
};
--- a/drivers/usb/serial/usb_wwan.c	2021-02-02 17:14:32.000000000 +0800
+++ b/drivers/usb/serial/usb_wwan.c	2021-02-01 14:56:55.000000000 +0800
@@ -507,9 +507,19 @@ static struct urb *usb_wwan_setup_urb(struct usb_serial_port *port,
			  usb_sndbulkpipe(serial->dev, endpoint) | dir,
			  buf, len, callback, ctx);

	if (intfdata->use_zlp && dir == USB_DIR_OUT)
		urb->transfer_flags |= URB_ZERO_PACKET;

#if 1 //Added by Quectel for zero packet
   if (dir == USB_DIR_OUT) {
     struct usb_device_descriptor *desc = &serial->dev->descriptor;
   if (desc->idVendor == cpu_to_le16(0x05C6) && desc->idProduct == cpu_to_le16(0x9090))
     urb->transfer_flags |= URB_ZERO_PACKET;
   if (desc->idVendor == cpu_to_le16(0x05C6) && desc->idProduct == cpu_to_le16(0x9003))
     urb->transfer_flags |= URB_ZERO_PACKET;
   if (desc->idVendor == cpu_to_le16(0x05C6) && desc->idProduct == cpu_to_le16(0x9215))
     urb->transfer_flags |= URB_ZERO_PACKET;
   if (desc->idVendor == cpu_to_le16(0x2C7C))
     urb->transfer_flags |= URB_ZERO_PACKET;
}
#endif
	return urb;
}
